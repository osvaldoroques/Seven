
services:
  # Grafana for observability dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: seven-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - otel-collector
    networks:
      - seven-network
    restart: unless-stopped

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: seven-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
    depends_on:
      - jaeger
    networks:
      - seven-network

  # Jaeger (latest stable)
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: seven-jaeger
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250" # gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - JAEGER_DISABLED=false
    networks:
      - seven-network

  nats:
    image: nats:latest
    container_name: seven-nats-server
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js"]
    healthcheck:
      test: ["CMD", "/nats-server", "--help"]
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - seven-network

  portfolio_manager:
    build:
      context: .
      dockerfile: Dockerfile
      target: portfolio_manager
    container_name: seven-portfolio-manager
    depends_on:
      nats:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - NATS_URL=nats://nats:4222
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=portfolio_manager
      - OTEL_RESOURCE_ATTRIBUTES=service.name=portfolio_manager,service.version=1.0.0
      - SPDLOG_LEVEL=info
    ports:
      - "8080:8080"
      - "9090:9090"  # Prometheus metrics endpoint
    networks:
      - seven-network

  python_client:
    build:
      context: .
      dockerfile: services/python_client/Dockerfile
    container_name: seven-healthcheck-client
    depends_on:
      nats:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - NATS_URL=nats://nats:4222
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=python_client
      - OTEL_RESOURCE_ATTRIBUTES=service.name=python_client,service.version=1.0.0
    networks:
      - seven-network

# Define volumes for persistent data
volumes:
  grafana_data:
    driver: local

# Define networks
networks:
  seven-network:
    driver: bridge
